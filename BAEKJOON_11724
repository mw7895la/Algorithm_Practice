import java.io.*;
import java.util.*;


public class Main {
    public static List<Integer>[] list;
    public static boolean[] v;
    public static int count=0;

    public static void main(String[] args) throws IOException {
        /**
         * 6 5      //N= 6  연결 개수 M =5
         * 1 2
         * 2 5
         * 5 1
         * 3 4
         * 4 6
         */
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st =new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        list = new ArrayList[N+1];
        v= new boolean[N+1];

        for(int i=0; i<N+1; i++){
            list[i]=new ArrayList<>();
        }

        for(int i=0; i<M; i++){
            st=new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            list[x].add(y);
            list[y].add(x);
        }

        for(int i=1; i<=N; i++){
            if(!v[i]){
                count++;
                dfs(i);
                //bfs(i);
            }
        }

        bw.write(String.valueOf(count));
        bw.flush();
        bw.close();
    }

    public static void dfs(int start){
        if(v[start]){
            return;
        }
        v[start]=true;

        for(int i : list[start]){
            int next = i;
            if(v[next]==false){
                dfs(next);
            }
        }
    }


}
