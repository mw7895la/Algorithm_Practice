import java.io.*;
import java.util.*;
public class Main {

    public static int MAX = 100001;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken());
        int K = Integer.parseInt(st.nextToken());

        Queue<Integer> q = new LinkedList<>();
        int[] dist = new int[MAX];
        boolean[] v = new boolean[MAX];

        dist[N]=0;
        v[N]=true;

        q.add(N);

        while (!q.isEmpty()) {
            int now = q.poll();

            if(now - 1 >=0){
                if(!v[now-1]){
                    q.add(now-1);
                    v[now-1]=true;
                    dist[now-1] = dist[now]+1;
                }
            }

            if(now+1 <MAX){
                if(!v[now+1]){
                    q.add(now + 1);
                    v[now+1]=true;
                    dist[now+1]=dist[now]+1;
                }
            }

            if(now*2 <MAX){
                if(!v[now*2]){
                    q.add(now*2);
                    v[now*2]=true;
                    dist[now*2]= dist[now]+1;
                }
            }
        }

        bw.write(String.valueOf(dist[K]));
        bw.flush();
        bw.close();
    }
}
