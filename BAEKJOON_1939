import java.io.*;
import java.util.*;


public class Main {
    static ArrayList<Edge>[] list = new ArrayList[10001];
    static boolean[] visit = new boolean[10001];
    static int N,M,start,end;

    static class Edge{
        int to;
        int cost;

        public Edge(int to, int cost) {
            this.to = to;
            this.cost = cost;
        }
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        for(int i=0; i<10001; i++){
            list[i] = new ArrayList<Edge>();
        }

        for(int i=0; i<M; i++){
            st = new StringTokenizer(br.readLine());
            int from = Integer.parseInt(st.nextToken());
            int to = Integer.parseInt(st.nextToken());
            int cost = Integer.parseInt(st.nextToken());
            list[from].add(new Edge(to, cost));
            list[to].add(new Edge(from,cost));
        }

        st = new StringTokenizer(br.readLine());
        start = Integer.parseInt(st.nextToken());
        end = Integer.parseInt(st.nextToken());

        int left = 1;
        int right = 1000000000;
        int ans=0;

        while(left <= right){
            int mid = (left + right) /2;
            Arrays.fill(visit,false);
            if (check(start, mid)) {
                //mid는 중량제한
                ans = mid;
                left = mid+1;
            }else{
                right = mid-1;
            }
        }

        bw.write(String.valueOf(ans));
        bw.flush();
        bw.close();
    }

    public static boolean check(int start,int limit){
        if(visit[start]){
            return false;
        }
        visit[start]=true;
        if(start==end)return true;
        for (Edge e : list[start]) {
            int next = e.to;
            int cost = e.cost;
            if(cost >= limit){
                if(check(next, limit)){
                    return true;
                }
            }
        }
        return false;
    }
}

