package com.company;

import java.io.*;
import java.util.Arrays;
import java.util.Stack;
import java.util.StringTokenizer;


public class Solution {

    public static long gcd(long a, long b) {
        while (b != 0) {
            long r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    public static void main(String[] args) throws IOException {

        //D =  S와 A(i)별로 거리의 차이의 약수중 최소.
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        //동생의 수
        int N = Integer.parseInt(st.nextToken());
        long S = Long.parseLong(st.nextToken());
        long min;
        long[] arr = new long[N];

        st = new StringTokenizer(br.readLine());
        for (int i = 0; i < arr.length; i++) {
            long res = 0;
            long a = Long.parseLong(st.nextToken());
            res = Math.abs(S - a);
            arr[i] = res;
        }

        min = arr[0];
        for (int i = 1; i < N; i++) {
            min = gcd(arr[i], min);
        }
        bw.write(Long.toString(min));
        bw.flush();


        bw.close();


    }
}
