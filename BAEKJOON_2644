import java.io.*;
import java.util.*;

public class Main {

    static ArrayList<Integer>[] list;
    static boolean[] visit;
    static int N,start,end;

    static int dist = 0;
    static int result =0;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        N = Integer.parseInt(br.readLine());

        StringTokenizer st = new StringTokenizer(br.readLine());

        start = Integer.parseInt(st.nextToken());
        end = Integer.parseInt(st.nextToken());

        int M = Integer.parseInt(br.readLine());
        list = new ArrayList[N + 1];
        visit = new boolean[N + 1];
        for(int i=1; i<=N; i++){
            list[i] = new ArrayList<>();
        }

        for(int i=1; i<=M; i++){
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            list[x].add(y);
            list[y].add(x);
        }

        DFS(start);
        if(result!=0){
            bw.write(String.valueOf(result));

        }else{
            bw.write("-1");
        }
        bw.flush();
        bw.close();
    }
    public static void DFS(int start){
        if(visit[start]){
            return;
        }
        visit[start]=true;

        for(int x : list[start]){
            if (!visit[x]) {
                dist++;
                if(x==end){
                    result= dist;
                }
                DFS(x);
                dist--;
            }
        }
    }
}
