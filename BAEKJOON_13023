import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {

    public static ArrayList<Integer>[] list;
    public static boolean[] v;
    public static boolean ok=false;
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        v=new boolean[N];
        list = new ArrayList[N];
        for(int i=0; i<N; i++){
            list[i]=new ArrayList<>();
        }

        for(int i=0; i<M; i++){

            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            list[x].add(y);
            list[y].add(x);
        }

        for(int i=0; i<N; i++){
            //모든 정점을 확인
            if(!ok){
                dfs(i,1);
            }
        }

        if(ok){
            bw.write("1");
        }else{
            bw.write("0");
        }
        bw.flush();
        bw.close();
        br.close();
    }

    public static void dfs(int start,int depth){
        if(depth==5){
            ok=true;
            return;
        }

        v[start]=true;
        for(int i : list[start]){
            int next = i;
            if(!v[next]){
                dfs(next,depth+1);
            }
        }
        v[start]=false;
    }
}
