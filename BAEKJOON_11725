import java.io.*;
import java.sql.Array;
import java.util.*;

public class Main {
    static int N;
    static ArrayList<Integer>[] list;
    static boolean[] visit;
    static int[] arr;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        N = Integer.parseInt(br.readLine());
        list = new ArrayList[N + 1];
        visit = new boolean[N + 1];
        arr = new int[N + 1];
        for(int i=1; i<N+1; i++){
            list[i] = new ArrayList<>();
        }

        StringTokenizer st;
        for(int i=1; i<N; i++){
            st = new StringTokenizer(br.readLine());
            int x = Integer.parseInt(st.nextToken());
            int y = Integer.parseInt(st.nextToken());
            list[x].add(y);
            list[y].add(x);
        }
        visit[1]=true;
        BFS(1);

        for(int i=2; i<N+1; i++){
            bw.write(String.valueOf(arr[i]));
            bw.newLine();
        }
        bw.flush();
        bw.close();
    }

    public static void BFS(int start){
        Queue<Integer> q = new LinkedList<>();
        q.add(start);
        while(!q.isEmpty()){
            int x = q.poll();

            for (int i : list[x]) {
                int next = i;
                if(!visit[next]){
                    visit[next]=true;
                    arr[next]=x;
                    q.add(next);
                }
            }
        }
    }
}
