import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.StringTokenizer;

public class Test2 {

    static int[][] rotation(int time[][]){
        int l = time.length;
        int[][] z = new int[l][l];

        for(int i=0; i<l; i++){
            for(int j=0; j<l; j++){
                z[i][j] = time[l-1-j][i];
            }
        }
        return z;
    }
    public static void main(String[] args) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int test_case = Integer.parseInt(st.nextToken());

        for(int i=0; i<test_case; i++) {    // 테스트 케이스
            st= new StringTokenizer(br.readLine());

            int N = Integer.parseInt(st.nextToken());

            int[][] time = new int[N][N];

            System.out.println("#"+(i+1));
            for (int j = 0; j < N; j++) {
                st= new StringTokenizer(br.readLine());
                for (int k = 0; k < N; k++) {
                    time[j][k] = Integer.parseInt(st.nextToken());
                }
            }
            int[][] b= rotation(time);
            int[][] c= rotation(b);
            int[][] d= rotation(c);
            for(int j=0; j<N; j++){
               for(int k=0; k<N; k++) {
                   System.out.print(b[j][k]);


               }
               System.out.print(" ");
                for(int k=0; k<N; k++) {
                    System.out.print(c[j][k]);


                }
                System.out.print(" ");
                for(int k=0; k<N; k++) {
                    System.out.print(d[j][k]);


                }
                System.out.println();

            }

            //(1) 정 방향에서 시계방향 90도
            /*for(int j=0; j<N; j++){
                for(int k=0; k<N; k++){
                    int a = time[N-1-k][j];
                    System.out.print(a);

                }
                System.out.print(" ");

            }*/

            /*(2) 시계방향 90 도 = 총 180도
            for(int j=0; j<N; j++){
                for(int k=0; k<N; k++){
                    int b= time[N-1-j][N-1-k];
                    System.out.print(b);
                }
                System.out.print(" ");
            }*/

            /*(3) 시계방향 90도 = 총 270도
            for(int j=0; j<N; j++){
                for(int k=0; k<N; k++){
                    int c = time[k][N-1-j];
                    System.out.print(c);
                }
                System.out.println();
            }*/

        }
    }
}
