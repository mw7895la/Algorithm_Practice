import java.io.*;
import java.sql.Array;
import java.util.*;


public class Main {
    static int N;
    static int M;
    static int[][] travel;
    static boolean[] visit;
    static int[] plan;
    static boolean check=true;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        N = Integer.parseInt(br.readLine());
        M = Integer.parseInt(br.readLine());

        visit = new boolean[N + 1];
        travel = new int[N+1][N+1];

        plan = new int[M + 1];

        StringTokenizer st;
        for (int i = 1; i < N+1; i++) {
            st = new StringTokenizer(br.readLine());
            for (int j = 1; j < N+1; j++) {
                travel[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        st = new StringTokenizer(br.readLine());
        for(int i=1; i<M+1; i++){
            plan[i] = Integer.parseInt(st.nextToken());
        }


        DFS(plan[1]);

        for(int i=1; i<M+1; i++){
            if (!visit[plan[i]]) {
                check=false;
                break;
            }
        }


        bw.write(check ? "YES" : "NO");
        bw.flush();
        bw.close();

    }
    public static void DFS(int x){

        visit[x]=true;

        for(int i=1; i<N+1; i++){
            if (travel[x][i] == 1 && !visit[i]) {
                DFS(i);
            }
        }
        return;
    }
}
