import java.io.*;
import java.util.*;


public class Main {
    static int K;
    static char[] eq;
    static int[] a;
    static boolean[] c=new boolean[10];
    static List<String> list = new ArrayList<>();
    static StringBuilder sb =new StringBuilder();
    public static boolean ok(String num){
        for(int i=0; i<K; i++){
            if(eq[i]=='<'){
                if (num.charAt(i) > num.charAt(i + 1)) {
                    return false;
                }
            }else if(eq[i]=='>'){
                if(num.charAt(i) < num.charAt(i+1)){
                    return false;
                }
            }

        }
        return true;
    }
    public static void recursion(int index,String num){
        if(index==K+1){
            if(ok(num)){
                list.add(num);
            }
            return;
        }

        for(int i=0; i<=9; i++){
            if(c[i])continue;
            c[i] =true;
            recursion(index+1,num+Integer.toString(i));
            c[i]=false;
        }
    }
    public static void main(String[] args) throws IOException {
        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        K = Integer.parseInt(br.readLine());

        eq = new char[K];
        a= new int[10];
        StringTokenizer st = new StringTokenizer(br.readLine());
        for(int i=0; i<K; i++){
            eq[i] = st.nextToken().charAt(0);       // < >
        }
        recursion(0,"");




        Collections.sort(list);

        bw.write(list.get(list.size()-1));
        bw.newLine();
        bw.write(list.get(0));

        bw.flush();
        bw.close();


    }
}
